!!ARBfp1.0
TEMP angle;
TEMP angle2;
TEMP color;

MUL angle, program.local[0], 0.1;
MUL angle2, fragment.position.y, 0.03;
ADD angle, angle, angle2;


# Code generated by Cg for computing sinus and cosinus
PARAM c[4] = { { 1, -24.980801, 60.145809, 0.15915491 },
		{ 0.25, 0.5, 0.75, 1 },
		{ -85.453789, 64.939346, -19.73921, 1 },
		{ 1, -1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP sincos;
MOV R0.x, c[0].w;
MUL R0.x, R0, angle;
FRC R1.z, R0.x;
SLT R0, R1.z, c[1];
ADD R2.xyz, R0.yzww, -R0;
MOV R0.yzw, R2.xxyz;
DP3 R1.x, R2, c[1].yyww;
DP4 R1.y, R0, c[1].xxzz;
ADD R1.xy, R1.z, -R1;
MUL R2.xy, R1, R1;
MUL R2.zw, R2.xyxy, R2.xyxy;
MUL R1, R2.zzww, c[0].yzyz;
ADD R1, R1, c[2].xyxy;
MAD R1, R1, R2.zzww, c[2].zwzw;
MAD R1.xy, R1.xzzw, R2, R1.ywzw;
DP4 R1.w, R0, c[3].xxyy;
DP4 R1.z, R0, c[3].xyyx;
MUL sincos, R1.wzzw, R1.yxzw;
#sin = sincos.x,  cos = sincos.y

#MUL sincos.x, sincos.x, 0.5;
#ADD sincos.x, sincos.x, 0.5;
ADD sincos.x, sincos.x, 1.0;
#MUL sincos.x, sincos.x, 0.5;

RSQ sincos.x, sincos.x;
ADD sincos.x, sincos.x, -1.0;

TEX color, fragment.texcoord[0], texture[0], 2D;

TEMP color2;
PARAM d = { 0.7, 0.2, 1.0, 1.0 };

MUL color2, d, sincos.x;
ADD result.color, color, color2;
END
